'''
 Built-in Functions
Python provides a number of important built-in functions.
The max and min functions give us the largest and smallest values in a list, respectively:
>>> max('Hello world')
'w'
>>> min('Hello world')
' '
>>>
Another very common built-in function is the len function which tells us how many items are in its argument.
>>> len('Hello world')
11
>>>
These functions are not limited to looking at strings. They can operate on any set of values.
'''

'''
Type Conversion Functions
The int function takes any value and converts it to an integer, if it can, or complains otherwise:
>>> int('32')
32
>>> int('Hello')
ValueError: invalid literal for int() with base 10: 'Hello'

int can convert floating-point values to integers, but it doesn't round off; it chops off the fraction part:
>>> int(3.99999)
3
>>> int(-2.3)
-2

float converts integers and strings to floating-point numbers:
>>> float(32)
32.0
>>> float('3.14159')
3.14159

Finally, str converts its argument to a string:
>>> str(32)
'32'
>>> str(3.14159)
'3.14159'
'''

'''
Random Numbers
Pseudorandom numbers are not truly random because they are generated by a deterministic computation, 
but just by looking at the numbers it is all but impossible to distinguish them from random.
The random module provides functions that generate pseudorandom numbers.
The function random returns a random float between 0.0 and 1.0 (including 0.0 but not 1.0). Each time you call
random , you get the next number in a long series. To see a sample, run this loop:
import random
for i in range(10):
    x = random.random()
    print(x)
This program produces the following list of 10 random numbers between 0.0 and up to but not including 1.0.
0.11132867921152356
0.5950949227890241
0.04820265884996877
0.841003109276478
0.997914947094958
0.04842330803368111
0.7416295948208405
0.510535245390327
0.27447040171978143
0.028511805472785867
'''

'''
Exercise 1: Run the program on your system and see what numbers you get. Run the program more than once and see what
numbers you get. All different numbers.
'''
import random
for i in range(10):
    x = random.random()
    print(x)

'''
The random function is only one of many functions that handle random numbers. The function randint takes the
parameters low and high , and returns an integer between low and high (including both).
>>> random.randint(5, 10)
5
>>> random.randint(5, 10)
9

To choose an element from a sequence at random, you can use choice :
>>> t = [1, 2, 3]
>>> random.choice(t)
2
>>> random.choice(t)
3

The random module also provides functions to generate random values from continuous distributions including Gaussian,
exponential, gamma, and a few more.
'''


'''
Math Functions
Python has a math module that provides most of the familiar mathematical functions. 
>>> import math
This statement creates a module object named math. If you print the module object, you get some information about it:
>>> print(math)
<module 'math' (built-in)>
The module object contains the functions and variables defined in the module. 

>>> ratio = s
>>> decibels = 10 * math.log10(ratio)
The example above computes the logarithm base 10 of the signal-to-noise ratio.

>>> radians = 0.7
>>> height = math.sin(radians)
>>> degrees = 45
>>> radians = degrees / 360.0 * 2 * math.pi # Ï€, accurate to about 15 digits
>>> math.sin(radians)
0.7071067811865476
We can check the previous result by comparing it to the square root of two divided by two:
>>> math.sqrt(2) / 2.0
0.7071067811865476
or
'''
import math as m
print(1/m.sqrt(2))

'''
4.6: Adding New Functions



'''